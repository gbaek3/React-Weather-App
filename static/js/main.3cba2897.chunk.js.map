{"version":3,"sources":["components/Homepage.js","App.js","index.js"],"names":["Homepage","state","apiCalled","APIkey","inputZip","inputError","currentTemp","highTemp","lowTemp","weatherDesc","name","lightMode","handleChange","event","_this","setState","Object","defineProperty","target","value","handleDefaultCall","preventDefault","$","concat","then","data","console","log","roundTemp","main","temp","temp_max","temp_min","properCase","weather","description","catch","err","useCurrentLoc","navigator","geolocation","getCurrentPosition","geoloc","localStorage","setItem","coords","latitude","longitude","handleGeoCall","latCoord","getItem","lonCoord","darkToggle","document","body","style","backgroundColor","Math","floor","str","toLowerCase","split","i","length","charAt","toUpperCase","slice","join","window","location","reload","_this$state","this","react_default","a","createElement","className","href","onClick","title","onSubmit","onChange","placeholder","Component","App","components_Homepage","component","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.3cba2897.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport '../App.css'\nimport * as $ from 'axios';\n\nclass Homepage extends Component {\n    state = {\n        apiCalled: false,\n        APIkey: 'abca5400fcc5dc0c00e8077d15e20a9e',\n        inputZip: '',\n        inputError: false,\n        currentTemp: '',\n        highTemp: '',\n        lowTemp: '',\n        weatherDesc: '',\n        name: '',\n        lightMode: true\n    }\n\n    roundTemp(temp) {\n        var converted = Math.floor(temp)\n        return converted;\n    }\n\n    properCase(str) {\n        str = str.toLowerCase().split(' ');\n        for (var i = 0; i < str.length; i++) {\n            str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n        }\n        return str.join(' ');\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    handleDefaultCall = (event) => {\n        event.preventDefault();\n        $.get(`https://api.openweathermap.org/data/2.5/weather?zip=${this.state.inputZip},us&units=imperial&appid=${this.state.APIkey}`)\n            .then((data) => {\n                console.log(data.data);\n                this.setState({\n                    apiCalled: true,\n                    inputError: false,\n                    inputZip: '',\n                    currentTemp: this.roundTemp(data.data.main.temp),\n                    highTemp: this.roundTemp(data.data.main.temp_max),\n                    lowTemp: this.roundTemp(data.data.main.temp_min),\n                    weatherDesc: this.properCase(data.data.weather[0].description),\n                    name: data.data.name\n                })\n            }).catch(err => {\n                this.setState({\n                    inputError: true\n                })\n            })\n\n    }\n\n    useCurrentLoc = (event) => {\n        event.preventDefault();\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((geoloc) => {\n                localStorage.setItem('latitude', geoloc.coords.latitude);\n                localStorage.setItem('longitude', geoloc.coords.longitude);\n                this.handleGeoCall();\n            },\n                (err) => {\n                    console.log(err)\n                })\n        }\n    }\n\n    handleGeoCall = (event) => {\n        var latCoord = localStorage.getItem('latitude');\n        var lonCoord = localStorage.getItem('longitude');\n\n        $.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latCoord}&lon=${lonCoord}&units=imperial&appid=${this.state.APIkey}`)\n            .then((data) => {\n                console.log(data.data);\n                this.setState({\n                    apiCalled: true,\n                    inputError: false,\n                    inputZip: '',\n                    currentTemp: this.roundTemp(data.data.main.temp),\n                    highTemp: this.roundTemp(data.data.main.temp_max),\n                    lowTemp: this.roundTemp(data.data.main.temp_min),\n                    weatherDesc: this.properCase(data.data.weather[0].description),\n                    name: data.data.name\n                })\n            }).catch(err => {\n                console.log(err)\n            })\n    }\n\n    reload() {\n        window.location.reload();\n    }\n\n    darkToggle = (event) => {\n        if (this.state.lightMode === true) {\n            document.body.style.backgroundColor = \"black\";\n            this.setState({\n                lightMode: false\n            })\n        }\n        else {\n            document.body.style.backgroundColor = \"#f2f2f2\";\n            this.setState({\n                lightMode: true\n            })\n        }\n    }\n\n    render() {\n        const { currentTemp, highTemp, lowTemp, weatherDesc, name } = this.state;\n        return (\n            <main className=\"App\">\n                <h1>\n                    <span className={this.state.lightMode ? \"title2\" : \"title\"}>Cloudy </span>\n                    <span className={this.state.lightMode ? \"title1\" : \"title\"}>with a Chance of </span>\n                    <span className={this.state.lightMode ? \"title2\" : \"title\"}>Weather</span>\n                </h1>\n                <a href=\".\" onClick={this.reload}>\n                    <i className={this.state.lightMode ? \"fas fa-home Home\" : \"fas fa-home HomeDark\"}\n                        title=\"Home\">\n                    </i>\n                </a>\n                <i className={this.state.lightMode ? \"fas fa-adjust Switch\" : \"fas fa-adjust SwitchDark\"}\n                    title=\"Toggle Dark Theme\"\n                    onClick={this.darkToggle}>\n                </i>\n\n                <form onSubmit={this.handleDefaultCall}>\n                    <input\n                        value={this.state.inputZip}\n                        name=\"inputZip\"\n                        onChange={this.handleChange}\n                        placeholder=\"Enter zip code...\">\n                    </input>\n                    <span className=\"currentLoc\">\n                        <i className={this.state.lightMode ? \"fas fa-search-location\" : \"fas fa-search-location locDark\"}\n                            onClick={this.useCurrentLoc}\n                            title=\"Use Current Location\">\n                        </i>\n                    </span>\n                    <div className={`inputError ${!this.state.inputError && \"errToggle\"}`}>\n                        Error - please try another zip code\n                    </div>\n                </form>\n\n                <div>\n                    {\n                        this.state.apiCalled\n                            ?\n                            <div className={this.state.lightMode ? \"\" : \"currentForecast\"}>\n                                <h1>Weather Report for {name}</h1>\n                                <div>Current temperature: {currentTemp}°</div>\n                                <div>{weatherDesc}</div>\n                                <div>High of {highTemp}°</div>\n                                <div>Low of {lowTemp}°</div>\n                            </div>\n                            :\n                            <div className=\"cloudy\"></div>\n                    }\n                </div>\n            </main>\n        );\n    }\n}\n\nexport default Homepage;\n","import React from 'react';\nimport Homepage from '../src/components/Homepage'\nimport './App.css';\n\nconst App = () => (\n  <Homepage component={Homepage} />\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}