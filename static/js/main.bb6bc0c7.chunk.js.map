{"version":3,"sources":["components/Homepage.js","App.js","index.js"],"names":["Homepage","state","apiCalled","APIkey","inputZip","inputError","currentTemp","highTemp","lowTemp","weatherDesc","forecastTemp","forecastDesc","forecastDays","displayName","lightMode","handleChange","event","_this","setState","Object","defineProperty","target","name","value","handleDefaultCall","preventDefault","$","concat","then","currentData","forecastData","console","log","roundTemp","data","main","temp","temp_max","temp_min","properCase","weather","description","list","getDayOfWeek","dt_txt","substring","catch","err","useCurrentLoc","navigator","geolocation","getCurrentPosition","geoloc","sessionStorage","setItem","coords","latitude","longitude","handleGeoCall","latCoord","getItem","lonCoord","darkToggle","document","body","style","backgroundColor","localStorage","Math","floor","str","toLowerCase","split","i","length","charAt","toUpperCase","slice","join","date","dayOfWeek","Date","getUTCDay","isNaN","window","location","reload","today","dd","getDate","mm","getMonth","_this$state","this","react_default","a","createElement","className","href","onClick","title","onSubmit","onChange","placeholder","Component","App","components_Homepage","component","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.bb6bc0c7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport '../App.css'\nimport * as $ from 'axios';\n\nclass Homepage extends Component {\n    state = {\n        apiCalled: false,\n        APIkey: 'abca5400fcc5dc0c00e8077d15e20a9e',\n        inputZip: '',\n        inputError: false,\n        currentTemp: '',\n        highTemp: '',\n        lowTemp: '',\n        weatherDesc: '',\n        forecastTemp: [],\n        forecastDesc: [],\n        forecastDays: [],\n        displayName: '',\n        lightMode: true\n    }\n\n    //remove decimals from Temperatures\n    roundTemp(temp) {\n        var converted = Math.floor(temp)\n        return converted;\n    }\n\n    //capitalize first word of string\n    properCase(str) {\n        str = str.toLowerCase().split(' ');\n        for (var i = 0; i < str.length; i++) {\n            str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1);\n        }\n        return str.join(' ');\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    //retrieve Weekday name from Date\n    getDayOfWeek(date) {\n        var dayOfWeek = new Date(date).getUTCDay();\n        return isNaN(dayOfWeek) ? null : ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][dayOfWeek];\n    }\n\n    //API call based on User zip code input\n    handleDefaultCall = (event) => {\n        event.preventDefault();\n        $.all([$.get(`https://api.openweathermap.org/data/2.5/weather?zip=${this.state.inputZip},us&units=imperial&appid=${this.state.APIkey}`),\n        $.get(`https://api.openweathermap.org/data/2.5/forecast?zip=${this.state.inputZip},us&units=imperial&appid=${this.state.APIkey}`)])\n            .then($.spread((currentData, forecastData) => {\n                console.log(currentData);\n                console.log(forecastData);\n                this.setState({\n                    apiCalled: true,\n                    inputError: false,\n                    displayName: this.state.inputZip,\n                    inputZip: '',\n                    currentTemp: this.roundTemp(currentData.data.main.temp),\n                    highTemp: this.roundTemp(currentData.data.main.temp_max),\n                    lowTemp: this.roundTemp(currentData.data.main.temp_min),\n                    weatherDesc: this.properCase(currentData.data.weather[0].description),\n                    forecastTemp: [\n                        this.roundTemp(forecastData.data.list[1].main.temp),\n                        this.roundTemp(forecastData.data.list[9].main.temp),\n                        this.roundTemp(forecastData.data.list[17].main.temp),\n                        this.roundTemp(forecastData.data.list[25].main.temp),\n                        this.roundTemp(forecastData.data.list[33].main.temp)\n                    ],\n                    forecastDesc: [\n                        this.properCase(forecastData.data.list[1].weather[0].description),\n                        this.properCase(forecastData.data.list[9].weather[0].description),\n                        this.properCase(forecastData.data.list[17].weather[0].description),\n                        this.properCase(forecastData.data.list[25].weather[0].description),\n                        this.properCase(forecastData.data.list[33].weather[0].description)\n                    ],\n                    forecastDays: [\n                        this.getDayOfWeek((forecastData.data.list[1].dt_txt).substring(0, 10)),\n                        this.getDayOfWeek((forecastData.data.list[9].dt_txt).substring(0, 10)),\n                        this.getDayOfWeek((forecastData.data.list[17].dt_txt).substring(0, 10)),\n                        this.getDayOfWeek((forecastData.data.list[25].dt_txt).substring(0, 10)),\n                        this.getDayOfWeek((forecastData.data.list[33].dt_txt).substring(0, 10)),\n                    ],\n                })\n            })).catch(err => {\n                this.setState({\n                    inputError: true\n                })\n            })\n    }\n\n    //use geolocation to get current coordinates\n    useCurrentLoc = (event) => {\n        event.preventDefault();\n        if (navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition((geoloc) => {\n                sessionStorage.setItem('latitude', geoloc.coords.latitude);\n                sessionStorage.setItem('longitude', geoloc.coords.longitude);\n                this.handleGeoCall();\n            },\n                (err) => {\n                    console.log(err)\n                })\n        }\n    }\n\n    //API call using latitude and longitude\n    handleGeoCall = (event) => {\n        var latCoord = sessionStorage.getItem('latitude');\n        var lonCoord = sessionStorage.getItem('longitude');\n\n        $.all([$.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latCoord}&lon=${lonCoord}&units=imperial&appid=${this.state.APIkey}`),\n        $.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${latCoord}&lon=${lonCoord}&units=imperial&appid=${this.state.APIkey}`)])\n            .then($.spread((currentData, forecastData) => {\n                console.log(currentData);\n                console.log(forecastData);\n                this.setState({\n                    apiCalled: true,\n                    inputError: false,\n                    displayName: currentData.data.name,\n                    inputZip: '',\n                    currentTemp: this.roundTemp(currentData.data.main.temp),\n                    highTemp: this.roundTemp(currentData.data.main.temp_max),\n                    lowTemp: this.roundTemp(currentData.data.main.temp_min),\n                    weatherDesc: this.properCase(currentData.data.weather[0].description),\n                    forecastTemp: [\n                        this.roundTemp(forecastData.data.list[1].main.temp),\n                        this.roundTemp(forecastData.data.list[9].main.temp),\n                        this.roundTemp(forecastData.data.list[17].main.temp),\n                        this.roundTemp(forecastData.data.list[25].main.temp),\n                        this.roundTemp(forecastData.data.list[33].main.temp)\n                    ],\n                    forecastDesc: [\n                        this.properCase(forecastData.data.list[1].weather[0].description),\n                        this.properCase(forecastData.data.list[9].weather[0].description),\n                        this.properCase(forecastData.data.list[17].weather[0].description),\n                        this.properCase(forecastData.data.list[25].weather[0].description),\n                        this.properCase(forecastData.data.list[33].weather[0].description)\n                    ],\n                    forecastDays: [\n                        this.getDayOfWeek((forecastData.data.list[1].dt_txt).substring(0, 10)),\n                        this.getDayOfWeek((forecastData.data.list[9].dt_txt).substring(0, 10)),\n                        this.getDayOfWeek((forecastData.data.list[17].dt_txt).substring(0, 10)),\n                        this.getDayOfWeek((forecastData.data.list[25].dt_txt).substring(0, 10)),\n                        this.getDayOfWeek((forecastData.data.list[33].dt_txt).substring(0, 10)),\n                    ],\n                })\n            })).catch(err => {\n                console.log(err)\n            })\n    }\n\n    //reset page using window reload\n    reload() {\n        window.location.reload();\n    }\n\n    //switch to toggle light and dark theme\n    darkToggle = (event) => {\n        if (this.state.lightMode === true) {\n            document.body.style.backgroundColor = \"black\";\n            localStorage.setItem('lightMode', false)\n            this.setState({\n                lightMode: false\n            })\n        }\n        else {\n            document.body.style.backgroundColor = \"#d8d8d8\";\n            localStorage.setItem('lightMode', true)\n            this.setState({\n                lightMode: true\n            })\n        }\n    }\n\n    render() {\n        //calculate today's date\n        var today = new Date();\n        var dd = today.getDate();\n        var mm = today.getMonth() + 1;\n        today = mm + '/' + dd;\n\n        const { currentTemp, highTemp, lowTemp, weatherDesc, displayName } = this.state;\n        return (\n            <main className=\"App\" >\n                <h1>\n                    <span className={`puff-in-center ${this.state.lightMode ? \"title2\" : \"title\"}`}>Cloudy </span>\n                    <span className={`puff-in-center ${this.state.lightMode ? \"title1\" : \"title\"}`}>with a Chance of </span>\n                    <span className={`puff-in-center ${this.state.lightMode ? \"title2\" : \"title\"}`}>Weather</span>\n                </h1>\n                <a href=\".\" onClick={this.reload}>\n                    <i className={this.state.lightMode ? \"fas fa-home Home\" : \"fas fa-home HomeDark\"}\n                        title=\"Home\">\n                    </i>\n                </a>\n                <i className={this.state.lightMode ? \"fas fa-adjust Switch\" : \"fas fa-adjust SwitchDark\"}\n                    title=\"Toggle Dark Theme\"\n                    onClick={this.darkToggle}>\n                </i>\n\n                <form onSubmit={this.handleDefaultCall}>\n                    <input\n                        value={this.state.inputZip}\n                        name=\"inputZip\"\n                        onChange={this.handleChange}\n                        placeholder=\"Enter zip code...\">\n                    </input>\n                    <span className=\"currentLoc\">\n                        <i className={this.state.lightMode ? \"fas fa-map-marker-alt\" : \"fas fa-map-marker-alt locDark\"}\n                            onClick={this.useCurrentLoc}\n                            title=\"Use Current Location\">\n                        </i>\n                    </span><br></br>\n                    <button className=\"btn btn-info btn-sm submit\"\n                        onClick={this.handleDefaultCall}>\n                        Submit\n                    </button>\n                    <div className={`inputError ${!this.state.inputError && \"errToggle\"}`}>\n                        Error - please try another zip code\n                    </div>\n                </form>\n\n                <div>\n                    {\n                        this.state.apiCalled\n                            ?\n                            <div>\n                                <div className={this.state.lightMode ? \"currentForecast\" : \"resultsDark\"}>\n                                    <h1>Weather Report for {displayName}</h1>\n                                    <h1>{today} </h1>\n                                    <div className=\"tempDiv\">{currentTemp}°</div>\n                                    <div>{weatherDesc}</div>\n                                    <div>High of {highTemp}°</div>\n                                    <div>Low of {lowTemp}°</div>\n                                </div>\n\n                                <div className={this.state.lightMode ? \"futureForecast\" : \"futureForecastDark\"}>\n                                    <h1>5 Day Forecast</h1>\n                                    <div className=\"container\">\n                                        <div className=\"row weekDays\">\n                                            <div className=\"col\">{this.state.forecastDays[0]}</div>\n                                            <div className=\"col\">{this.state.forecastDays[1]}</div>\n                                            <div className=\"col\">{this.state.forecastDays[2]}</div>\n                                            <div className=\"col\">{this.state.forecastDays[3]}</div>\n                                            <div className=\"col\">{this.state.forecastDays[4]}</div>\n                                        </div>\n\n                                        <div className=\"row fiveDay\">\n                                            <div className=\"col\">{this.state.forecastTemp[0]}°</div>\n                                            <div className=\"col\">{this.state.forecastTemp[1]}°</div>\n                                            <div className=\"col\">{this.state.forecastTemp[2]}°</div>\n                                            <div className=\"col\">{this.state.forecastTemp[3]}°</div>\n                                            <div className=\"col\">{this.state.forecastTemp[4]}°</div>\n                                        </div>\n\n                                        <div className=\"row fiveDayDesc\">\n                                            <div className=\"col\">{this.state.forecastDesc[0]}</div>\n                                            <div className=\"col\">{this.state.forecastDesc[1]}</div>\n                                            <div className=\"col\">{this.state.forecastDesc[2]}</div>\n                                            <div className=\"col\">{this.state.forecastDesc[3]}</div>\n                                            <div className=\"col\">{this.state.forecastDesc[4]}</div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            :\n                            <div className=\"cloudy\"></div>\n                    }\n                </div>\n            </main>\n        );\n    }\n}\n\nexport default Homepage;\n","import React from 'react';\nimport Homepage from '../src/components/Homepage'\nimport './App.css';\n\nconst App = () => (\n  <Homepage component={Homepage} />\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}